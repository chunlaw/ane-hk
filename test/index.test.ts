import AneHk from "../src/index"

const aneHk = new AneHk()

test("test retrieve single value", () => {
  const targetDate = new Date("2024-03-15T00:00")
  return aneHk.getWaitingTime(targetDate, "Alice Ho Miu Ling Nethersole Hospital")
    .then(res => {
      expect(res["2024-03-15 00:00"] ).toBe("> 2")
    })
})

test("Calculate current wait time", () => {
  return aneHk.calculateWaitTime(new Date(), "Alice Ho Miu Ling Nethersole Hospital")
    .then(res => {
      expect(res).toBe(undefined)
    })
})

test("test 24 hours", () => {
  const targetDate = new Date("2024-03-19T14:00")
  return aneHk.getLast24HoursForParticularDate(targetDate, "Alice Ho Miu Ling Nethersole Hospital")
    .then(res => {
      expect(res).toEqual([
        [ '2024-03-19 14:00', '> 2' ],
        [ '2024-03-19 13:30', '> 2' ],
        [ '2024-03-19 13:15', '> 1' ],
        [ '2024-03-19 13:00', '> 1' ],
        [ '2024-03-19 13:00', '> 1' ],
        [ '2024-03-19 12:30', '> 1' ],
        [ '2024-03-19 12:15', '> 2' ],
        [ '2024-03-19 12:00', '> 8' ],
        [ '2024-03-19 12:00', '> 8' ],
        [ '2024-03-19 11:30', '> 8' ],
        [ '2024-03-19 11:15', '> 8' ],
        [ '2024-03-19 11:00', '> 8' ],
        [ '2024-03-19 11:00', '> 8' ],
        [ '2024-03-19 10:30', '> 8' ],
        [ '2024-03-19 10:15', '> 8' ],
        [ '2024-03-19 10:00', '> 8' ],
        [ '2024-03-19 10:00', '> 8' ],
        [ '2024-03-19 09:30', '> 8' ],
        [ '2024-03-19 09:15', '> 8' ],
        [ '2024-03-19 09:00', '> 8' ],
        [ '2024-03-19 09:00', '> 8' ],
        [ '2024-03-19 08:30', '> 8' ],
        [ '2024-03-19 08:15', '> 8' ],
        [ '2024-03-19 08:00', '> 8' ],
        [ '2024-03-19 08:00', '> 8' ],
        [ '2024-03-19 07:30', '> 8' ],
        [ '2024-03-19 07:15', '> 8' ],
        [ '2024-03-19 07:00', '> 8' ],
        [ '2024-03-19 07:00', '> 8' ],
        [ '2024-03-19 06:30', '> 8' ],
        [ '2024-03-19 06:15', '> 8' ],
        [ '2024-03-19 06:00', '> 8' ],
        [ '2024-03-19 06:00', '> 8' ],
        [ '2024-03-19 05:30', '> 8' ],
        [ '2024-03-19 05:15', '> 8' ],
        [ '2024-03-19 05:00', '> 7' ],
        [ '2024-03-19 05:00', '> 7' ],
        [ '2024-03-19 04:30', '> 7' ],
        [ '2024-03-19 04:15', '> 7' ],
        [ '2024-03-19 04:00', '> 7' ],
        [ '2024-03-19 04:00', '> 7' ],
        [ '2024-03-19 03:30', '> 7' ],
        [ '2024-03-19 03:15', '> 7' ],
        [ '2024-03-19 03:00', '> 7' ],
        [ '2024-03-19 03:00', '> 7' ],
        [ '2024-03-19 02:30', '> 7' ],
        [ '2024-03-19 02:15', '> 7' ],
        [ '2024-03-19 02:00', '> 7' ],
        [ '2024-03-19 02:00', '> 7' ],
        [ '2024-03-19 01:30', '> 7' ],
        [ '2024-03-19 01:15', '> 7' ],
        [ '2024-03-19 01:00', '> 6' ],
        [ '2024-03-19 01:00', '> 6' ],
        [ '2024-03-19 00:30', '> 6' ],
        [ '2024-03-19 00:15', '> 6' ],
        [ '2024-03-19 00:00', '> 6' ],
        [ '2024-03-19 00:00', '> 6' ],
        [ '2024-03-18 23:30', '> 6' ],
        [ '2024-03-18 23:15', '> 5' ],
        [ '2024-03-18 23:00', '> 5' ],
        [ '2024-03-18 23:00', '> 5' ],
        [ '2024-03-18 22:30', '> 5' ],
        [ '2024-03-18 22:15', '> 5' ],
        [ '2024-03-18 22:00', '> 5' ],
        [ '2024-03-18 22:00', '> 5' ],
        [ '2024-03-18 21:30', '> 5' ],
        [ '2024-03-18 21:15', '> 5' ],
        [ '2024-03-18 21:00', '> 4' ],
        [ '2024-03-18 21:00', '> 4' ],
        [ '2024-03-18 20:30', '> 4' ],
        [ '2024-03-18 20:15', '> 3' ],
        [ '2024-03-18 20:00', '> 3' ],
        [ '2024-03-18 20:00', '> 3' ],
        [ '2024-03-18 19:30', '> 3' ],
        [ '2024-03-18 19:15', '> 3' ],
        [ '2024-03-18 19:00', '> 3' ],
        [ '2024-03-18 19:00', '> 3' ],
        [ '2024-03-18 18:30', '> 3' ],
        [ '2024-03-18 18:15', '> 3' ],
        [ '2024-03-18 18:00', '> 3' ],
        [ '2024-03-18 18:00', '> 3' ],
        [ '2024-03-18 17:30', '> 3' ],
        [ '2024-03-18 17:15', '> 3' ],
        [ '2024-03-18 17:00', '> 3' ],
        [ '2024-03-18 17:00', '> 3' ],
        [ '2024-03-18 16:30', '> 3' ],
        [ '2024-03-18 16:15', '> 3' ],
        [ '2024-03-18 16:00', '> 3' ],
        [ '2024-03-18 16:00', '> 3' ],
        [ '2024-03-18 15:30', '> 3' ],
        [ '2024-03-18 15:15', '> 3' ],
        [ '2024-03-18 15:00', '> 3' ],
        [ '2024-03-18 15:00', '> 3' ],
        [ '2024-03-18 14:30', '> 3' ],
        [ '2024-03-18 14:15', '> 3' ],
        [ '2024-03-18 14:00', undefined ]
      ])
    })
})

test("test calculate wait time", () => {
  const targetDate = new Date("2024-03-18 10:00")
  return (
    Promise.all([
      aneHk.calculateWaitTime(new Date("2024-03-18 10:00"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 10:15"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 10:30"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 10:45"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 11:00"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 11:15"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 11:30"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 11:45"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 12:00"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 12:15"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 12:30"), "Alice Ho Miu Ling Nethersole Hospital"),
      aneHk.calculateWaitTime(new Date("2024-03-18 12:45"), "Alice Ho Miu Ling Nethersole Hospital"),
    ])
    .then(res => {
      expect(res).toEqual([
        '> 2', '> 2', '> 2',
        '> 2', '> 2', '> 3',
        '> 3', '> 3', '> 3',
        '> 3', '> 3', '> 3'
      ])
    })
  )
})
